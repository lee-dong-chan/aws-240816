name: Deployment
#deploy 전체는 작성해올것

on:
  push:
    branches:
      - main

jobs:
  backtest:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: wait for mySQL to be ready
        run: |
          unti;; mysqladmin ping -h "127.0.0.1" --silent; do
            echo "Wating for mySQL"
            sleep 5
          done

      - name: Install mySQL Client
        run: sudo apt-get install mysql-client

      - name: Run mySQL commands
        run: |
          mysql --h "127.0.0.1" -u ${{secrets.MYSQL_USER}} -p${{secrets.MYSQL_PASSWORD}} -e "SHOW DATABASES"

      - name: set env
        working-directory: ./mock-test
        run: |
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" > .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "MESSAGE=${{ secrets.MESSAGE }}" >> .env

      - name: Install dependencies of backend
        working-directory: ./mock-test
        run: npm i

      - name: Run Test of backend
        working-directory: ./mock-test
        run: npm test

  fronttest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies of backend
        working-directory: ./todo_list
        run: npm i

      - name: Run Test of backend
        working-directory: ./todo_list
        run: npm test
